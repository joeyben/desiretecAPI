build backend:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build --build-arg APP_KEY=${APP_KEY_PROD}
      --build-arg AWS_KEY=${AWS_ACCESS_KEY}
      --build-arg AWS_SECRET=${AWS_SECRET_KEY}
      --build-arg AWS_BUCKET=${AWS_BUCKET}
      --build-arg AWS_REGION=${AWS_DEFAULT_REGION}
      --cache-from ${CONTAINER_IMAGE_LATEST} -f .docker/laravel/Dockerfile -t ${CONTAINER_IMAGE}:${CI_COMMIT_SHA} -t ${CONTAINER_IMAGE_LATEST} .
    - docker push ${CONTAINER_IMAGE}
  only:
    - master
    - development
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/app
    CONTAINER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/app:latest

build frontend:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -f .docker/app-proxy/Dockerfile -t ${NGINX_CONTAINER_IMAGE}:${CI_COMMIT_SHA} -t ${NGINX_CONTAINER_IMAGE_LATEST} .
    - docker push ${NGINX_CONTAINER_IMAGE}
  only:
    - master
    - development
  variables:
    NGINX_CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/nginx
    NGINX_CONTAINER_IMAGE_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/nginx:latest